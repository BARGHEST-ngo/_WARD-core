name: release
on:
  push:
    tags: ["v*"]

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install . pyinstaller
      # Build using spec file
      - name: Verify config file exists (Windows)
        shell: pwsh
        run: |
          if (Test-Path "ward_core\config.yaml") {
            Write-Host "✓ Config file exists"
          } else {
            Write-Host "✗ Config file not found"
            exit 1
          }
      - run: |
          $addDataArg = "ward_core\config.yaml;."
          pyinstaller --noconfirm --clean --name ward-core --distpath build/dist --workpath build/work --add-data "$addDataArg" main.py
        shell: pwsh
      # Verify config.yaml is bundled
      - run: powershell "Get-ChildItem -Path build/dist/ward-core | Select-Object Name"
      - run: powershell -Command "if (!(Test-Path 'build/dist/ward-core/config.yaml')) { Write-Error 'config.yaml not found'; exit 1 }"
      # Zip and checksum
      - run: powershell Compress-Archive -Path build/dist/ward-core/* -DestinationPath ward-core-${{ github.ref_name }}-windows-x64.zip
      - run: powershell "(Get-FileHash ward-core-${{ github.ref_name }}-windows-x64.zip -Algorithm SHA256).Hash | Out-File ward-core-${{ github.ref_name }}-windows-x64.zip.sha256"
      # Release
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            ward-core-${{ github.ref_name }}-windows-x64.zip
            ward-core-${{ github.ref_name }}-windows-x64.zip.sha256

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install . pyinstaller
      # Build using spec file
      - name: Verify config file exists (Linux)
        run: |
          if [ -f "ward_core/config.yaml" ]; then
            echo "✓ Config file exists"
          else
            echo "✗ Config file not found"
            exit 1
          fi
      - run: |
          addDataArg="ward_core/config.yaml:."
          pyinstaller --noconfirm --clean --name ward-core --distpath build/dist --workpath build/work --add-data "$addDataArg" main.py
      - run: ls -la build/dist/ward-core
      - run: test -f build/dist/ward-core/config.yaml
      - run: (cd build/dist && zip -r ../../ward-core-${{ github.ref_name }}-linux-x64.zip ward-core)
      - run: sha256sum ward-core-${{ github.ref_name }}-linux-x64.zip > ward-core-${{ github.ref_name }}-linux-x64.zip.sha256
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            ward-core-${{ github.ref_name }}-linux-x64.zip
            ward-core-${{ github.ref_name }}-linux-x64.zip.sha256

  build-macos-x64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install . pyinstaller
      - name: Verify config file exists (macOS x64)
        run: |
          if [ -f "ward_core/config.yaml" ]; then
            echo "✓ Config file exists"
          else
            echo "✗ Config file not found"
            exit 1
          fi
      - run: |
          addDataArg="ward_core/config.yaml:."
          pyinstaller --noconfirm --clean --name ward-core --distpath build/dist --workpath build/work --add-data "$addDataArg" main.py
      - run: ls -la build/dist/ward-core
      - run: test -f build/dist/ward-core/config.yaml
      - run: (cd build/dist && zip -r ../../ward-core-${{ github.ref_name }}-macos-x64.zip ward-core)
      - run: shasum -a 256 ward-core-${{ github.ref_name }}-macos-x64.zip > ward-core-${{ github.ref_name }}-macos-x64.zip.sha256
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            ward-core-${{ github.ref_name }}-macos-x64.zip
            ward-core-${{ github.ref_name }}-macos-x64.zip.sha256

  build-macos-arm64:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install . pyinstaller
      - name: Verify config file exists (macOS ARM64)
        run: |
          if [ -f "ward_core/config.yaml" ]; then
            echo "✓ Config file exists"
          else
            echo "✗ Config file not found"
            exit 1
          fi
      - run: |
          addDataArg="ward_core/config.yaml:."
          pyinstaller --noconfirm --clean --name ward-core --distpath build/dist --workpath build/work --add-data "$addDataArg" main.py
      - run: ls -la build/dist/ward-core
      - run: test -f build/dist/ward-core/config.yaml
      - run: (cd build/dist && zip -r ../../ward-core-${{ github.ref_name }}-macos-arm64.zip ward-core)
      - run: shasum -a 256 ward-core-${{ github.ref_name }}-macos-arm64.zip > ward-core-${{ github.ref_name }}-macos-arm64.zip.sha256
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            ward-core-${{ github.ref_name }}-macos-arm64.zip
            ward-core-${{ github.ref_name }}-macos-arm64.zip.sha256
